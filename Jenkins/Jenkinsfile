pipeline {
    agent {
        kubernetes {
          yamlFile 'Jenkins/container-builder.yaml'
        }
      }

    environment{
        SOURCE_REPOSITORY_URL = 'https://github.com/inganyoyo/hello-devops-gradle.git'
        MANIFEST_REPOSITORY_URL = 'https://github.com/inganyoyo/k8s-manifest.git'
        REPOSITORY_BRANCH = 'main'
        GIT_CREDENTIALS_ID = 'git-jenkins-token'
    }
    stages {
//         // git에서 repository clone
//         stage('Prepare') {
//           steps {
//             echo 'Clonning Repository'
//             container('gradle'){
//                 git credentialsId: "${GIT_CREDENTIALS_ID}",
//                     url: "${SOURCE_REPOSITORY_URL}",
//                     branch: "${REPOSITORY_BRANCH}"
//             }
//           }
//         }
//
// //                 stage ('build project maven') {
// //                     steps {
// //                         container('maven') {
// //                             dir ('./hello-springboot-mvn'){
// //                                 sh """
// //                                 mvn -version
// //                                 mvn clean install
// //                                 """
// //                             }
// //                         }
// //                     }
// //                 }
//
//         stage ('build project gradle') {
//             steps {
//                 container('gradle') {
//                     dir ('.'){
//                         sh """
//                         gradle -v
//                         gradle clean build -i
//                         """
//                     }
//                 }
//             }
//         }
//
//         stage('Kaniko Build & Push Image') {
//           steps {
//             container('kaniko') {
//               script {
//                 sh '''
//                 /kaniko/executor --dockerfile `pwd`/Jenkins/Dockerfile \
//                                  --context `pwd` \
//                                  --destination=inganyoyo/hello-devops-springboot:${BUILD_NUMBER}
//                 '''
//               }
//             }
//           }
//         }

        stage('K8S Manifest Update') {
          steps {
            container('git'){
                // git 계정 로그인, 해당 레포지토리의 main 브랜치에서 클론
                git credentialsId: "${GIT_CREDENTIALS_ID}",
                    url: "${MANIFEST_REPOSITORY_URL}",
                    branch: "${REPOSITORY_BRANCH}"
                // 이미지 태그 변경 후 메인 브랜치에 푸시
                withCredentials([gitUsernamePassword(credentialsId: "${GIT_CREDENTIALS_ID}", passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh "git config --global user.email inganyoyo@naver.com"
                    sh "git config --global user.name inganyoyo"
                    sh "git config --global --add safe.directory /home/jenkins/agent/workspace/hello-devops-gradle"
                    sh 'sed -i "s/22/${BUILD_NUMBER}/" hello-devops-gradle/deployment.yaml'
                    sh 'git add .'
                    sh "git commit -m 'fix:${BUILD_NUMBER} image versioning'"
                    sh "git branch -M main"
                    sh "git remote remove origin"
                    sh "git remote add origin git@github.com:inganyoyo/k8s-manifest.git"
                    sh "git push -u origin main"
                }
              }
              post {
                failure {
                  echo "FAILED: K8S Manifest Update '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
                }
                success {
                  echo "SUCCESS: K8S Manifest Update '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
                }
              }
            }
        }

    }
}

