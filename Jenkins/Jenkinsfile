pipeline {
    agent {
        kubernetes {
          yamlFile 'Jenkins/container-builder.yaml'
        }
      }

    environment{
        SOURCE_REPOSITORY_URL = 'https://github.com/inganyoyo/hello-devops-gradle.git'
        MANIFEST_REPOSITORY_URL = 'https://github.com/inganyoyo/k8s-manifest.git'
        REPOSITORY_BRANCH = 'main'
        GIT_CREDENTIALS_ID = 'git-jenkins-token'
    }
    stages {
        // git에서 repository clone
        stage('Prepare') {
          steps {
            echo 'Clonning Repository'
            container('git-source'){
                git credentialsId: "${GIT_CREDENTIALS_ID}",
                    url: "${SOURCE_REPOSITORY_URL}",
                    branch: "${REPOSITORY_BRANCH}"
            }
          }
        }
//
// //                 stage ('build project maven') {
// //                     steps {
// //                         container('maven') {
// //                             dir ('./hello-springboot-mvn'){
// //                                 sh """
// //                                 mvn -version
// //                                 mvn clean install
// //                                 """
// //                             }
// //                         }
// //                     }
// //                 }
//
        stage ('build project gradle') {
            steps {
                container('gradle') {
                    dir ('.'){
                        sh """
                        gradle -v
                        gradle clean build -i
                        """
                    }
                }
            }
        }

        stage('Kaniko Build & Push Image') {
          steps {
            container('kaniko') {
              script {
                sh '''
                /kaniko/executor --dockerfile `pwd`/Jenkins/Dockerfile \
                                 --context `pwd` \
                                 --destination=inganyoyo/hello-devops-springboot:${BUILD_NUMBER}
                '''
              }
            }
          }
        }

        stage('K8S Manifest Update') {
          steps {
            container('git-manifest'){
                git credentialsId: "${GIT_CREDENTIALS_ID}",
                    url: "${MANIFEST_REPOSITORY_URL}",
                    branch: "${REPOSITORY_BRANCH}"
                withCredentials([gitUsernamePassword(credentialsId: "${GIT_CREDENTIALS_ID}", passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
                    sh "git config --global user.email inganyoyo@me.com"
                    sh "git config --global user.name inganyoyo"
                    sh 'sed -i "s/hello-devops-springboot:.*/hello-devops-springboot:${BUILD_NUMBER}/g" hello-devops-gradle/deployment.yaml'
                    sh 'cat hello-devops-gradle/deployment.yaml'
                    sh 'pwd'
                    sh 'cd k8s-manifest'
                    sh 'git add .'
                    sh "git commit -m 'fix:${BUILD_NUMBER} image versioning'"
                    sh "git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USERNAME}/k8s-manifest.git HEAD:main"
                }
            }
//               post {
//                 failure {
//                   echo "FAILED: K8S Manifest Update '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
//                 }
//                 success {
//                   echo "SUCCESS: K8S Manifest Update '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})"
//                 }
//               }
            }
        }

    }
}

